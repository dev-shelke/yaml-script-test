---
- name: Monitor System Information and Send Alerts
  hosts: all
  become: yes
  vars:
    memory_threshold: 80  # Alert if memory usage exceeds 80%
    disk_threshold: 80    # Alert if disk usage exceeds 80%
    webhook_url: "https://discord.com/api/webhooks/1341011025926819861/iwbomQaEk5e6Y8MBRx47ln0hFPd-TPFBj3TjIwZBJfSSpfbSqAU0nM46Z023GgJamgQy"

  tasks:
    - name: Check Memory Usage
      shell: free | awk '/Mem/{printf("%.0f", $3/$2*100)}'
      register: memory_usage
      changed_when: false

    - name: Check Disk Usage
      shell: df -h / | awk 'NR==2 {print $5}' | grep -o '[0-9]*'
      register: disk_usage
      changed_when: false

    - name: Get CPU Load
      shell: top -bn1 | grep "Cpu(s)" | awk '{print 100 - $8}'
      register: cpu_usage
      changed_when: false

    - name: Get System Uptime
      shell: uptime -p
      register: system_uptime
      changed_when: false

    - name: Get Hostname
      shell: hostname
      register: system_hostname
      changed_when: false

    - name: Get Private IP Address
      shell: hostname -I | awk '{print $1}'
      register: system_ip
      changed_when: false

    - name: Get Public IP Address
      shell: curl -s ifconfig.me
      register: public_ip
      changed_when: false

    - name: Get OS Information
      shell: "hostnamectl | grep 'Operating System' | cut -d ' ' -f3-"
      register: os_info
      changed_when: false

 #   - name: Get AWS Region (if applicable)
 #     shell: curl -s http://13.212.6.179/latest/meta-data/placement/region
 #     register: aws_region
#      changed_when: false
 #     ignore_errors: yes

  #  - name: Get Azure Region (if applicable)
  #    shell: 'curl -s -H "Metadata:true" "http://13.212.6.179/metadata/instance/compute/location?api-version=2021-01-01&format=text"'
 #     register: azure_region
 #     changed_when: false
 #     ignore_errors: yes

    - name: Determine Final Region
      set_fact:
        server_region: "{{ aws_region.stdout | default(azure_region.stdout) | default('Unknown') }}"

    - name: Debug - Display System Metrics
      debug:
        msg: |
          Hostname: {{ system_hostname.stdout }}
          Private IP Address: {{ system_ip.stdout }}
          Public IP Address: {{ public_ip.stdout }}
          Memory Usage: {{ memory_usage.stdout }}%
          Disk Usage: {{ disk_usage.stdout }}%
          CPU Load: {{ cpu_usage.stdout }}%
          Uptime: {{ system_uptime.stdout }}
          OS: {{ os_info.stdout }}
          Region: {{ server_region }}

    - name: Send Discord Alert for High Memory Usage
      uri:
        url: "{{ webhook_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body: >
          {
            "content": ":warning: **Memory Alert!**\n**Hostname:** `{{ system_hostname.stdout }}`\nğŸ”¹ **Private IP:** {{ system_ip.stdout }}\nğŸ”¹ **Public IP:** {{ public_ip.stdout }}\nğŸ”¹ **Region:** {{ server_region }}\nğŸ”¹ **Memory Usage:** {{ memory_usage.stdout }}%\nğŸ”¹ **CPU Load:** {{ cpu_usage.stdout }}%\nğŸ”¹ **Disk Usage:** {{ disk_usage.stdout }}%\nğŸ”¹ **Uptime:** {{ system_uptime.stdout }}\nğŸ”¹ **OS:** {{ os_info.stdout }}"
          }
        body_format: json
        status_code: [200]
      when: memory_usage.stdout|int > memory_threshold and memory_usage.stdout is not none and memory_usage.stdout != ""

    - name: Send Discord Alert for High Disk Usage
      uri:
        url: "{{ webhook_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body: >
          {
            "content": ":warning: **Disk Alert!**\n**Hostname:** `{{ system_hostname.stdout }}`\nğŸ”¹ **Private IP:** {{ system_ip.stdout }}\nğŸ”¹ **Public IP:** {{ public_ip.stdout }}\nğŸ”¹ **Region:** {{ server_region }}\nğŸ”¹ **Disk Usage:** {{ disk_usage.stdout }}%\nğŸ”¹ **Memory Usage:** {{ memory_usage.stdout }}%\nğŸ”¹ **CPU Load:** {{ cpu_usage.stdout }}%\nğŸ”¹ **Uptime:** {{ system_uptime.stdout }}\nğŸ”¹ **OS:** {{ os_info.stdout }}"
          }
        body_format: json
        status_code: [200]
      when: disk_usage.stdout|int > disk_threshold and disk_usage.stdout is not none and disk_usage.stdout != ""
